// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: company.proto
// Protobuf C++ Version: 5.28.3

#include "company.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr Company::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        companyname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        occupation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        yearfoundation_{0},
        economicactivity_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Company::Company(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CompanyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompanyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompanyDefaultTypeInternal() {}
  union {
    Company _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompanyDefaultTypeInternal _Company_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_company_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_company_2eproto = nullptr;
const ::uint32_t
    TableStruct_company_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::Company, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Company, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Company, _impl_.yearfoundation_),
        PROTOBUF_FIELD_OFFSET(::Company, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::Company, _impl_.companyname_),
        PROTOBUF_FIELD_OFFSET(::Company, _impl_.occupation_),
        PROTOBUF_FIELD_OFFSET(::Company, _impl_.economicactivity_),
        3,
        0,
        1,
        2,
        4,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::Company)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_Company_default_instance_._instance,
};
const char descriptor_table_protodef_company_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rcompany.proto\"u\n\007Company\022\026\n\016yearFounda"
    "tion\030\001 \002(\005\022\017\n\007address\030\002 \002(\t\022\023\n\013companyNa"
    "me\030\003 \002(\t\022\022\n\noccupation\030\004 \001(\t\022\030\n\020economic"
    "Activity\030\005 \001(\010"
};
static ::absl::once_flag descriptor_table_company_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_company_2eproto = {
    false,
    false,
    134,
    descriptor_table_protodef_company_2eproto,
    "company.proto",
    &descriptor_table_company_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_company_2eproto::offsets,
    file_level_enum_descriptors_company_2eproto,
    file_level_service_descriptors_company_2eproto,
};
// ===================================================================

class Company::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Company>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Company, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000b) ^ 0x0000000b) != 0;
  }
};

Company::Company(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Company)
}
inline PROTOBUF_NDEBUG_INLINE Company::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Company& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        address_(arena, from.address_),
        companyname_(arena, from.companyname_),
        occupation_(arena, from.occupation_) {}

Company::Company(
    ::google::protobuf::Arena* arena,
    const Company& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Company* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, yearfoundation_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, yearfoundation_),
           offsetof(Impl_, economicactivity_) -
               offsetof(Impl_, yearfoundation_) +
               sizeof(Impl_::economicactivity_));

  // @@protoc_insertion_point(copy_constructor:Company)
}
inline PROTOBUF_NDEBUG_INLINE Company::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        address_(arena),
        companyname_(arena),
        occupation_(arena) {}

inline void Company::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, yearfoundation_),
           0,
           offsetof(Impl_, economicactivity_) -
               offsetof(Impl_, yearfoundation_) +
               sizeof(Impl_::economicactivity_));
}
Company::~Company() {
  // @@protoc_insertion_point(destructor:Company)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Company::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.address_.Destroy();
  _impl_.companyname_.Destroy();
  _impl_.occupation_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Company::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Company_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            Company::IsInitializedImpl,
            &Company::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Company>(),
            ::google::protobuf::Message::GetNewImpl<Company>(),
            ::google::protobuf::Message::GetClearImpl<Company>(), &Company::ByteSizeLong,
                &Company::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Company, _impl_._cached_size_),
            false,
        },
        &Company::kDescriptorMethods,
        &descriptor_table_company_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Company::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 44, 2> Company::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Company, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Company>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required int32 yearFoundation = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Company, _impl_.yearfoundation_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(Company, _impl_.yearfoundation_)}},
    // required string address = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Company, _impl_.address_)}},
    // required string companyName = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(Company, _impl_.companyname_)}},
    // optional string occupation = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(Company, _impl_.occupation_)}},
    // optional bool economicActivity = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Company, _impl_.economicactivity_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(Company, _impl_.economicactivity_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 yearFoundation = 1;
    {PROTOBUF_FIELD_OFFSET(Company, _impl_.yearfoundation_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required string address = 2;
    {PROTOBUF_FIELD_OFFSET(Company, _impl_.address_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string companyName = 3;
    {PROTOBUF_FIELD_OFFSET(Company, _impl_.companyname_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string occupation = 4;
    {PROTOBUF_FIELD_OFFSET(Company, _impl_.occupation_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool economicActivity = 5;
    {PROTOBUF_FIELD_OFFSET(Company, _impl_.economicactivity_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\7\0\7\13\12\0\0\0"
    "Company"
    "address"
    "companyName"
    "occupation"
  }},
};

PROTOBUF_NOINLINE void Company::Clear() {
// @@protoc_insertion_point(message_clear_start:Company)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.address_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.companyname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.occupation_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&_impl_.yearfoundation_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.economicactivity_) -
        reinterpret_cast<char*>(&_impl_.yearfoundation_)) + sizeof(_impl_.economicactivity_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Company::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Company& this_ = static_cast<const Company&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Company::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Company& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Company)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required int32 yearFoundation = 1;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_yearfoundation(), target);
          }

          // required string address = 2;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "Company.address");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // required string companyName = 3;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_companyname();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "Company.companyName");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // optional string occupation = 4;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_occupation();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "Company.occupation");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // optional bool economicActivity = 5;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_economicactivity(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Company)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Company::ByteSizeLong(const MessageLite& base) {
          const Company& this_ = static_cast<const Company&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Company::ByteSizeLong() const {
          const Company& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Company)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // required string address = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
            // required string companyName = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_companyname());
            }
          }
           {
            // optional string occupation = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_occupation());
            }
          }
           {
            // required int32 yearFoundation = 1;
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_yearfoundation());
            }
          }
           {
            // optional bool economicActivity = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Company::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Company*>(&to_msg);
  auto& from = static_cast<const Company&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Company)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_address(from._internal_address());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_companyname(from._internal_companyname());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_occupation(from._internal_occupation());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.yearfoundation_ = from._impl_.yearfoundation_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.economicactivity_ = from._impl_.economicactivity_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Company::CopyFrom(const Company& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Company)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Company::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const Company&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void Company::InternalSwap(Company* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.companyname_, &other->_impl_.companyname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.occupation_, &other->_impl_.occupation_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Company, _impl_.economicactivity_)
      + sizeof(Company::_impl_.economicactivity_)
      - PROTOBUF_FIELD_OFFSET(Company, _impl_.yearfoundation_)>(
          reinterpret_cast<char*>(&_impl_.yearfoundation_),
          reinterpret_cast<char*>(&other->_impl_.yearfoundation_));
}

::google::protobuf::Metadata Company::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_company_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
